{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\new\\\\src\\\\components\\\\UrlForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { TextField, Button, Grid } from '@mui/material';\nimport { isValidUrl, isValidShortcode, isValidMinutes } from '../utils/validators';\nimport { generateShortcode } from '../utils/shortcodeGenerator';\nimport { logAction } from '../utils/loggerMiddleware';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UrlForm = ({\n  onShorten\n}) => {\n  _s();\n  const [inputs, setInputs] = useState([{\n    url: '',\n    minutes: '',\n    code: ''\n  }]);\n  const handleChange = (index, field, value) => {\n    const updated = [...inputs];\n    updated[index][field] = value;\n    setInputs(updated);\n  };\n  const handleSubmit = () => {\n    const results = inputs.map(input => {\n      const {\n        url,\n        minutes,\n        code\n      } = input;\n      if (!isValidUrl(url)) return {\n        error: 'Invalid URL'\n      };\n      const validity = isValidMinutes(parseInt(minutes)) ? parseInt(minutes) : 30;\n      const finalCode = code && isValidShortcode(code) ? code : generateShortcode();\n      const expiry = Date.now() + validity * 60000;\n      logAction('shorten_url', {\n        url,\n        finalCode,\n        expiry\n      });\n      return {\n        url,\n        finalCode,\n        expiry\n      };\n    });\n    onShorten(results);\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [inputs.map((input, idx) => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Long URL\",\n        fullWidth: true,\n        onChange: e => handleChange(idx, 'url', e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Validity (minutes)\",\n        type: \"number\",\n        onChange: e => handleChange(idx, 'minutes', e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Custom Shortcode (optional)\",\n        onChange: e => handleChange(idx, 'code', e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleSubmit,\n      children: \"Shorten URLs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(UrlForm, \"B2qGdvcSLwP75sY3vTf0AWydtMo=\");\n_c = UrlForm;\nexport default UrlForm;\nvar _c;\n$RefreshReg$(_c, \"UrlForm\");","map":{"version":3,"names":["useState","TextField","Button","Grid","isValidUrl","isValidShortcode","isValidMinutes","generateShortcode","logAction","jsxDEV","_jsxDEV","UrlForm","onShorten","_s","inputs","setInputs","url","minutes","code","handleChange","index","field","value","updated","handleSubmit","results","map","input","error","validity","parseInt","finalCode","expiry","Date","now","container","spacing","children","idx","item","xs","label","fullWidth","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/new/src/components/UrlForm.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { TextField, Button, Grid } from '@mui/material';\r\nimport { isValidUrl, isValidShortcode, isValidMinutes } from '../utils/validators';\r\nimport { generateShortcode } from '../utils/shortcodeGenerator';\r\nimport { logAction } from '../utils/loggerMiddleware';\r\n\r\nconst UrlForm = ({ onShorten }) => {\r\n  const [inputs, setInputs] = useState([{ url: '', minutes: '', code: '' }]);\r\n\r\n  const handleChange = (index, field, value) => {\r\n    const updated = [...inputs];\r\n    updated[index][field] = value;\r\n    setInputs(updated);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const results = inputs.map((input) => {\r\n      const { url, minutes, code } = input;\r\n      if (!isValidUrl(url)) return { error: 'Invalid URL' };\r\n      const validity = isValidMinutes(parseInt(minutes)) ? parseInt(minutes) : 30;\r\n      const finalCode = code && isValidShortcode(code) ? code : generateShortcode();\r\n      const expiry = Date.now() + validity * 60000;\r\n\r\n      logAction('shorten_url', { url, finalCode, expiry });\r\n\r\n      return { url, finalCode, expiry };\r\n    });\r\n    onShorten(results);\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      {inputs.map((input, idx) => (\r\n        <Grid item xs={12} key={idx}>\r\n          <TextField label=\"Long URL\" fullWidth onChange={(e) => handleChange(idx, 'url', e.target.value)} />\r\n          <TextField label=\"Validity (minutes)\" type=\"number\" onChange={(e) => handleChange(idx, 'minutes', e.target.value)} />\r\n          <TextField label=\"Custom Shortcode (optional)\" onChange={(e) => handleChange(idx, 'code', e.target.value)} />\r\n        </Grid>\r\n      ))}\r\n      <Button variant=\"contained\" onClick={handleSubmit}>Shorten URLs</Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default UrlForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}